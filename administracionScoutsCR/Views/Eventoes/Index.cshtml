@model List<administracionScoutsCR.Models.Evento>

@{
    ViewData["Title"] = "Eventos";
}

<body>
    <div class="content">
        <div class="page-header">
            <div class="add-item d-flex">
                <div class="page-title">
                    <h4>Eventos</h4>
                    <h6>Eventos creados</h6>
                </div>
            </div>
            <ul class="table-top-head">
                <li>
                    <a href="javascript:void(0);" onclick="exportarAPdf('contenidoExportar', 'contactos-emergencia')" title="Exportar a PDF">
                        <img src="assets/img/icons/pdf.svg" alt="PDF" />
                    </a>
                </li>
                <li>
                    <a href="javascript:void(0);" data-bs-toggle="tooltip" title="Refresh" onclick="location.reload();">
                        <i data-feather="rotate-ccw"></i>
                    </a>
                </li>
                <li>
                    <div class="page-btn">
                        <a class="btn btn-added" asp-controller="Eventoes" asp-action="Create">
                            <i data-feather="plus-circle" class="me-2"></i>Crear un nuevo Evento
                        </a>
                    </div>
                </li>
            </ul>
        </div>

        <!-- Tabla de eventos -->
        <div class="card table-list-card">
            <div class="card-body pb-0">
                <div class="table-responsive">
                    <table class="table table-striped" id="eventosTable">
                        <thead>
                            <tr>
                                <th>Título</th>
                                <th>Fecha</th>
                                <th>Lugar</th>
                                <th>Confirmados</th>
                                <th>Acciones</th>
                                <th style="width: 50px;"></th> <!-- Espacio para icono de eliminar -->
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                bool usuarioConfirmado = ViewBag.UsuarioConfirmaciones != null &&
                                ViewBag.UsuarioConfirmaciones.ContainsKey(item.IdEvento) &&
                                ViewBag.UsuarioConfirmaciones[item.IdEvento];

                                int confirmados = ViewBag.Confirmaciones != null && ViewBag.Confirmaciones.ContainsKey(item.IdEvento)
                                ? ViewBag.Confirmaciones[item.IdEvento]
                                : 0;

                                <tr id="evento-@item.IdEvento">
                                    <td>@item.Titulo</td>
                                    <td>@item.Fecha.ToShortDateString()</td>
                                    <td>@item.Lugar</td>
                                    <td>
                                        <span id="confirmados-@item.IdEvento" class="badge @(confirmados > 0 ? "bg-success" : "bg-secondary")">
                                            @confirmados personas
                                        </span>
                                    </td>
                                    <td class="action-table-data text-end">
                                        <div class="edit-delete-action d-flex align-items-center">
                                            <button id="btn-confirmar-@item.IdEvento"
                                                    class="btn btn-sm @(usuarioConfirmado ? "btn-danger" : "btn-success") me-3"
                                                    onclick="toggleAsistencia(@item.IdEvento, @(usuarioConfirmado.ToString().ToLower()))">
                                                @(usuarioConfirmado ? "Cancelar Asistencia" : "Confirmar Asistencia")
                                            </button>
                                            <a class="me-2 edit-icon p-2" asp-action="Details" asp-route-id="@item.IdEvento">
                                                <i data-feather="eye" class="feather-eye"></i>
                                            </a>
                                            <a class="me-2 p-2" asp-action="Edit" asp-route-id="@item.IdEvento">
                                                <i data-feather="edit" class="feather-edit"></i>
                                            </a>
                                            <a class="confirm-text p-2" href="javascript:void(0);" onclick="confirmarBorradoEvento('@item.IdEvento')">
                                                <i data-feather="trash-2" class="feather-trash-2"></i>
                                            </a>
                                        </div>
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</body>
@section Scripts {
<script>
    function toggleAsistencia(idEvento, isConfirmed) {
        let action = isConfirmed ? "EliminarConfirmacion" : "ConfirmarAsistencia";
        let mensaje = `¿Estás seguro de que deseas ${isConfirmed ? "cancelar" : "confirmar"} tu asistencia?`;

        if (confirm(mensaje)) {
            fetch(`/Eventoes/${action}?idEvento=${idEvento}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        let btn = document.getElementById(`btn-confirmar-${idEvento}`);
                        let confirmadosBadge = document.getElementById(`confirmados-${idEvento}`);

                        if (data.confirmado) {
                            btn.innerText = "Cancelar Asistencia";
                            btn.classList.remove("btn-success");
                            btn.classList.add("btn-danger");
                        } else {
                            btn.innerText = "Confirmar Asistencia";
                            btn.classList.remove("btn-danger");
                            btn.classList.add("btn-success");
                        }

                        // Update count
                        confirmadosBadge.innerText = `${data.totalConfirmados} personas`;
                        confirmadosBadge.classList.remove("bg-success", "bg-secondary");
                        confirmadosBadge.classList.add(data.totalConfirmados > 0 ? "bg-success" : "bg-secondary");

                        // Update button click action
                        btn.setAttribute("onclick", `toggleAsistencia(${idEvento}, ${data.confirmado})`);
                    } else {
                        alert("Error al actualizar la asistencia.");
                    }
                })
                .catch(error => console.error("Error:", error));
        }
    }
        function confirmarBorradoEvento(id) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡Esto eliminará el evento permanentemente!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ff9f43',
                cancelButtonColor: '#f63c3c',
                confirmButtonText: 'Sí, eliminarlo',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/Eventoes/DeleteConfirmed/${id}`, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire('Eliminado', 'El evento ha sido eliminado.', 'success').then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error', 'No se pudo eliminar el evento.', 'error');
                            }
                        });
                }
            });
        }

        feather.replace();
</script>
}